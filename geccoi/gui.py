"""User Interface for Geccoi Management"""

import os, sys
import tkinter

import PySimpleGUI as sg

from .settingsapi import get_settings_file

class GeccoiInterface:
    def __init__(self):
        self._sg = sg

        self._sg.LOOK_AND_FEEL_TABLE["Geccoi"] = {
            'BACKGROUND': '#757575',
            'TEXT': '#74c93a',
            'INPUT': '#DDE0DE',
            'SCROLL': '#58ad1f',
            'TEXT_INPUT': '#8ced4a',
            'BUTTON': ('white', '#6D9F85'),
            'PROGRESS': sg.DEFAULT_PROGRESS_BAR_COLOR,
            'BORDER': 0,
            'SLIDER_DEPTH': 0,
            'PROGRESS_DEPTH': 0
        }

        self._sg.theme(get_settings_file().get("general").get("theme"))

        self._layout = [
            [self._sg.Text(" "*100), self._sg.Button("Exit", button_color=("#e00000", self._sg.DEFAULT_BACKGROUND_COLOR), size=(6,1))],
            [self._sg.Text("_"*80, font="Courier 15 bold")],
            [self._sg.Text(" "), self._sg.Text("GeCCOI Manager", font="Courier 30 bold")],
            [self._sg.Text("")],
            [self._sg.Text(" "*32), self._sg.Button("Start", font="Courier 15", button_color=("white", "#07c700"), size=(12, 1), key="-S/S-"),
             self._sg.Text(" "*12), self._sg.Button("Not Showing Camera", visible=False, key="Camera", button_color=("green", "white"))],
            [self._sg.Text("")],
            [self._sg.Text(" "*8), self._sg.Text('Settings', font="Courier 24 bold")],
            # Rest of the toggleable settings.
            [self._sg.Text(" "*16), self._sg.Text("General:", font="Courier 16 bold")],
            [self._sg.Text("")],
            [self._sg.Text(" "*16), self._sg.Text("Keyboard:", font="Courier 16 bold")],
            [self._sg.Text("")],
            [self._sg.Text(" "*16), self._sg.Text("Mouse:", font="Courier 16 bold")],
            [self._sg.Text("")]
        ]

        self._camera_layout = [
            [self._sg.Image("", background_color="green")]
        ]

        self._window = self._sg.Window('GeCCOI Manager', self._layout, size=(500, self._get_display_res()[1]), no_titlebar=True)
        self._camera_win = self._sg.Window("Camera",
                                           icon=b"",
                                           size=(),
                                           layout=self._camera_layout)

    def _get_display_res(self):
        # Get Display Resolution.
        root = tkinter.Tk()
        root.withdraw()
        return root.winfo_screenwidth(), root.winfo_screenheight()

    def start_event_loop(self):
        self._camera_loop()

        while True:
            event, values = self._window.read()
            print(event, values)

            if event == "-S/S-":
                if self._window["-S/S-"].get_text() == "Start":
                    self._window["-S/S-"]("Stop", button_color=("white", "red"))
                    self._window["Camera"](visible=True)
                else:
                    self._window["-S/S-"]("Start", button_color=("white", "#07c700"))
                    self._window["Camera"](visible=False)
            elif event == "Camera":
                if self._window["Camera"].get_text() == "Not Showing Camera":
                    self._window["Camera"]("Showing Camera", button_color=("#07c700", "white"))
                    # Show Camera Window
                else:
                    self._window["Camera"]("Not Showing Camera", button_color=("red", "white"))
                    # Make Camera Window invisible

                

            if event in (None, "Exit"):
                break

        self._window.close()

    def _camera_loop(self):
        self._camera_win.finalize()
        while True:


gui = GeccoiInterface()
gui.start_event_loop()